{"version":3,"sources":["components/AddCategory.js","helpers/getGifts.js","components/GiftGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GitExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GiftGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","setTimeout","useFetchGifs","GitExpertApp","categories","onClick","ReactDOM","render","document","getElementById"],"mappings":"mMASaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEdC,mBAAS,IAFK,mBAE3CC,EAF2C,KAE/BC,EAF+B,KA2B9C,OACI,uBAAMC,SAbK,SAACC,GAEpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAElBR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAoBO,OACvCN,EAAc,MAMnB,UACI,gDACA,uBACIO,KAAM,OACNC,MAAOT,EACPU,SA7BY,SAACP,GAE5BF,EAAeE,EAAEQ,OAAOF,c,+BCZZG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAGAI,MAASF,GAHT,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAgBdM,GAhBc,4CAAH,sDCAPO,EAAe,SAAC,GAAqB,IAAnBH,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAIlC,OACI,sBAAKc,UAAW,0CAAhB,UAEQ,qBAAKC,IAAQf,EAAMgB,IAAON,IAE1B,kCAAMA,EAAN,WC4CHO,EAAU,SAAC,GAAmB,IAAhBnB,EAAe,EAAfA,SAAe,EClDd,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAE/BqB,KAAM,GACNa,SAAS,IAL2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KA2BxC,OAjBAC,qBAAU,WAENxB,EAASC,GAAWwB,MAAM,SAAAd,GAEde,YAAW,WAEPH,EAAS,CACTf,KAAMG,EACNU,SAAS,MAGd,UAIZ,CAACpB,IAEGqB,EDyB0BK,CAAc1B,GAAjCa,EAFwB,EAE7BN,KAAaa,EAFgB,EAEhBA,QAElB,OACI,qCACI,6BAAMpB,IACLoB,GAAW,yCACZ,qBAAKJ,UAAU,YAAf,SAEAH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEIA,GADGA,EAAIC,aEfhBgB,EAhDO,WAAI,MAIUzC,mBAAU,CAAC,gBAJrB,mBAInB0C,EAJmB,KAIP3C,EAJO,KAiB1B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAkBA,IAC/B,uBAEA,wBAAS4C,QAlBC,WAOV5C,GAAe,SAAAS,GAAI,4BAAQA,GAAR,CAAa,aAWhC,qBACA,6BAEQkC,EAAWnB,KAAK,SAAAT,GAAQ,OAGxB,aAFA,CAEC,EAAD,CAEAA,SAAaA,GADLA,Y,MC5BxB8B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.f872c78b.chunk.js","sourcesContent":["\r\n\r\n\r\nimport React, { useState } from 'react';\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\nconst [inputValue, setInputValue] = useState(''); \r\n\r\nconst   handleInputChange = (e)=>{\r\n\r\n setInputValue( e.target.value ); \r\n    \r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst handleSubmit=(e)=>{\r\n\r\ne.preventDefault();\r\n\r\nif( inputValue.trim().length > 2 ){\r\n\r\n             setCategories( cats => [ inputValue,...cats ]);\r\n             setInputValue('');\r\n    }\r\n}\r\n\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <h2>Add Category 1</h2>\r\n            <input \r\n                type= \"text\"\r\n                value={inputValue}\r\n                onChange = { handleInputChange }\r\n            />\r\n      \r\n        </form>\r\n       \r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n}","\r\n\r\n\r\nexport const getGifs = async( category )=>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=QiDU4Q9gy1MBrGl0YlU20ilr4vZjmhrh`\r\n    // const url= `https://api.giphy.com/v1/gifs/trending?&q=${encodeURI(category)}&limit=10&api_key=QiDU4Q9gy1MBrGl0YlU20ilr4vZjmhrh`;\r\n    const resp = await fetch  ( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n\r\n        }\r\n\r\n    })\r\n\r\n  return gifs;\r\n}","import  React  from \"react\";\r\n\r\n\r\nexport const GiftGridItem = ( {title, url } ) => {\r\n\r\n//console.log(id, title)\r\n\r\n    return (\r\n        <div className= 'card animate__animated animate__bounce '>\r\n              \r\n                <img src = { url } alt ={ title }/>\r\n\r\n                <p> { title } </p> \r\n\r\n        </div>\r\n    )\r\n}\r\n ","// import React, { useState, useEffect }from 'react'\r\n// import { getGifs } from '../helpers/getGifts';\r\n// import { GiftGridItem } from './GiftGridItem';\r\n\r\n\r\n// export const GifGrid = ( { category }) => {\r\n\r\n//    //const [count, setCount] = useState(0);\r\n//    const [images, setImages] = useState([]);\r\n\r\n//     useEffect(() => {\r\n\r\n//        getGifs(category)\r\n//        .then(setImages) \r\n       \r\n//    }, [category]);\r\n\r\n           \r\n\r\n//    //getGifs();\r\n  \r\n//     return (\r\n//         <>\r\n//             <h3>{ category }</h3>\r\n//             <div className=\"card-grid\">\r\n            \r\n                // {\r\n                // images.map( img=> (\r\n\r\n                // // <li key={img.id}> {img.title}   </li>,\r\n\r\n                //     <GiftGridItem\r\n                //     key = {img.id }\r\n                //     //title = {img.title}\r\n\r\n                //     {...img}\r\n                //     />\r\n\r\n                //             ) )\r\n\r\n                //     }\r\n            \r\n//           </div>\r\n//        </>\r\n//     ) \r\n \r\n// }\r\n//-------------------------------------------------------------------\r\n\r\n//-----------------------hooks bases \r\n\r\n\r\nimport React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GiftGridItem } from './GiftGridItem';\r\n\r\nexport const GifGrid = ( { category }) => {\r\n\r\n      const {data:images, loading} = useFetchGifs( category );\r\n\r\n        return(\r\n            <>\r\n                <h3>{ category }</h3>\r\n                {loading && <p>Cargando</p>}\r\n                <div className=\"card-grid\">\r\n                {\r\n                images.map( img=> (\r\n                    <GiftGridItem\r\n                    key = {img.id }\r\n                    {...img}\r\n                    /> \r\n                    ) )                        \r\n                    }\r\n                </div>\r\n\r\n            </>\r\n        )\r\n}","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from '../helpers/getGifts';\r\n\r\n\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    \r\n    const [state, setstate] = useState({\r\n\r\n        data: [],\r\n        loading: true\r\n\r\n    });  \r\n    \r\n    \r\n    useEffect(() => {\r\n\r\n        getGifs( category ).then( img=>{ \r\n\r\n                    setTimeout(() => {\r\n                \r\n                        setstate({\r\n                        data: img, \r\n                        loading: false\r\n                    })\r\n                    \r\n                }, 3000);\r\n\r\n         }  )       \r\n\r\n    }, [category])\r\n\r\n    return state;\r\n\r\n}\r\n","\r\nimport React , { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GitExpertApp = (()=>{\r\n\r\n    // const categories = ['One Punch', 'Samurat','Dragon Ball'];\r\n// const [categories, setCategories] = useState( ['One Punch', 'Samurat','Dragon Ball']);\r\nconst [categories, setCategories] = useState( ['Dragon Ball']);\r\nconst handleAdd = () =>{\r\n        \r\n        //setCategories( [...categories, 'Yiyo'] );\r\n\r\n        \r\n\r\n\r\n        setCategories( cats => [...cats,'Yiyo']);\r\n\r\n\r\n}\r\n\r\nreturn(\r\n    <>\r\n        <h2>GitExpertApp</h2>\r\n        <AddCategory setCategories = { setCategories }/> \r\n        <hr/>\r\n        \r\n        <button  onClick={ handleAdd  }>Agregar</button>\r\n        <ol>\r\n            {\r\n                categories.map( category => (\r\n                //<li key={ category }> { category } </li>,\r\n\r\n                <GifGrid\r\n                key = { category }  \r\n                category = { category }\r\n                />\r\n\r\n                ))\r\n            }\r\n        </ol>\r\n\r\n    </>\r\n);\r\n\r\n})\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default GitExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GitExpertApp from './GitExpertApp';\n\nimport './index.css';\n\n\nReactDOM.render(\n    <GitExpertApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}